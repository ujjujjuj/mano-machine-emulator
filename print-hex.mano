    LDA DT1
    BSA PHX
    LDA DT2
    BSA PHX
    HLT

DT1,HEX dead // hex data to print
DT2,HEX f00d

// print hex string
// prints the hex number in AC
PHX,HEX 0
    STA HTP
HLP,LDA HTP         // loop
    CIL
    CIL
    CIL
    CIL
    STA HTP
    AND HBM
    ADD HSB
    SNA             // skip if not an alphabet
    ADD HOA
    ADD HAD
    ADD HOF
    STA HPT I
    ISZ HPT
    ISZ HCT
    BUN HLP
    LDA HPP
    BSA PST
    // reset state for next call
    LDA HCO
    STA HCT
    LDA HPO
    STA HPT
    BUN PHX I
HTP,HEX 0           // temporary memory
HBB,HEX 0           // hex byte 0
    HEX 0           // hex byte 1
    HEX 0           // hex byte 2
    HEX 0           // hex byte 3
    HEX 0           // hex null terminator
HBM,HEX 000f        // bit mask for 1 nibble
HOF,HEX 30          // offset to get '0'
HOA,HEX 27          // offset to get 'A'
HPP,HEX HBB         // pointer to first letter
HCT,DEC -4          // counter
HCO, DEC -4         // counter original
HPT,HEX HBB         // temporary pointer
HPO,HEX HBB         // temp pointer original
HSB,DEC -10         // subtract
HAD,DEC 10          // add
// print hex string end

// print string 
// prints a null terminated string in AC
PST,HEX 0
    STA PTR
PSL,LDA PTR I
    SZA
    BUN SNZ
    BUN PST I
SNZ,OUT
    ISZ PTR    
    BUN PSL
PTR,HEX 0
// print string end

    END